<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_cmsIssues.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="_ilIssues.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>210, 17</value>
  </metadata>
  <data name="_ilIssues.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA2AsAAAJNU0Z0AUkBTAIBAQMB
        AAEQAQABEAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARAm
        AAI1ATcBVwIzAYAB0gI+AUQBcAMZASICJAGSAeUCQwFQAYcDBgEHJAABNQE3ATgBVwEzAYABlAHSAT4B
        RAFGAXADGQEiASQBkgGtAeUBQwFQAVQBhwMGAQccAAE8AUABPAFqAwYBCBgAAwgBCgE8AUABPAFrXAAC
        PwFFAXICAAGqAf8CAAGqAf8CPwFHAXQDGQEiAgABqgH/AgABqgH/Aj4BcAG8AwQBBRwAAT8BRQFHAXIB
        AAGqAdQB/wEAAaoB1AH/AT8BRwFIAXQDGQEiAQABqgHUAf8BAAGqAdQB/wE+AXABfQG8AwQBBRgAAUAB
        RgFAAXcBNwFtATcBzgMYASAQAAEVARYBFQEdATcBawE3AcsBPgFCAT4BcFgAAyEBLwIEAaUB/AIAAaoB
        /wIAAaoB/wI/AUcBdAMZASICAAGqAf8CAAGqAf8CAAGqAf8CQQFKAXwYAAMhAS8BBAGlAdAB/AEAAaoB
        1AH/AQABqgHUAf8BPwFHAUgBdAMZASIBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BQQFKAU0BfBgAAxgB
        IQECAYABAgH+AR0BeAEdAesDLAFDCAABKQEqASkBPgEeAXYBHgHpAQIBgAECAf4DFgEeWAACQwFlAakC
        AAGqAf8CAAGqAf8CAAGqAf8CPwFHAXQDGQEiAgABqgH/AgABqgH/AgABqgH/AhQBmgHwAwcBCRQAAUMB
        ZQFtAakBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BPwFHAUgBdAMZASIBAAGqAdQB/wEAAaoB1AH/AQAB
        qgHUAf8BFAGaAbsB8AMHAQkYAAE5AWoBOQHKAQABgAEAAf8BBgF9AQYB+wE+AUIBPgFvAT8BRAE/AXMB
        BgF9AQYB+wEAAYABAAH/AToBaQE6AcZYAAMHAQkCDgGkAfcCAAGqAf8CAAGqAf8CAAGqAf8CPwFHAXQD
        GQEiAgABqgH/AgABqgH/AgABqgH/AgABqgH/AjMBNAFREAADBwEJAQ4BpAHIAfcBAAGqAdQB/wEAAaoB
        1AH/AQABqgHUAf8BPwFHAUgBdAMZASIBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wEzAjQB
        URgAAUABRgFAAXcBAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8B
        PwFEAT8BclgAAyYBOAIAAaoB/wIAAaoB/wIAAaoB/wIAAaoB/wI/AUcBdAMZASICAAGqAf8CAAGqAf8C
        AAGqAf8CAAGqAf8CQwFRAYgQAAMmATgBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wE/AUcB
        SAF0AxkBIgEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wEAAaoB1AH/AUMBUQFUAYgYAAMYASEBAgGAAQIB
        /gEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQIBgAECAf4DFwEfWAACMwE1AVMCAAGqAf8C
        AAGqAf8CAAGqAf8CAAGqAf8CPwFHAXQDGQEiAgABqgH/AgABqgH/AgABqgH/AgABqgH/AkQBYQGjEAAB
        MwI1AVMBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wE/AUcBSAF0AxkBIgEAAaoB1AH/AQAB
        qgHUAf8BAAGqAdQB/wEAAaoB1AH/AUQBYQFoAaMYAAE6AT0BOgFkAQYBfQEGAfsBAAGAAQAB/wEAAYAB
        AAH/AQABgAEAAf8BAAGAAQAB/wEGAX0BBgH7AToBPQE6AWVYAAI2ATkBWgIAAaoB/wIAAaoB/wIAAaoB
        /wIAAaoB/wI/AUcBdAMZASICAAGqAf8CAAGqAf8CAAGqAf8CAAGqAf8CRAFnAawQAAE2ATkBOgFaAQAB
        qgHUAf8BAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BPwFHAUgBdAMZASIBAAGqAdQB/wEAAaoB1AH/AQAB
        qgHUAf8BAAGqAdQB/wFEAWcBbwGsEAADCwEOAUMBWgFDAaUBAAGAAQAB/wEAAYABAAH/AQABgAEAAf8B
        AAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AUMBXgFDAa0DDgESUAACLgEvAUcC
        AAGqAf8CAAGqAf8CAAGqAf8CAAGqAf8CPwFHAXQDGQEiAgABqgH/AgABqgH/AgABqgH/AgABqgH/AkUB
        WgGYEAABLgIvAUcBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wE/AUcBSAF0AxkBIgEAAaoB
        1AH/AQABqgHUAf8BAAGqAdQB/wEAAaoB1AH/AUUBWgFfAZgMAAMkATQBLAFxASwB2wEAAYABAAH/AQAB
        gAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB
        /wEAAYABAAH/AScBdQEnAeEDKAE8TAADEwEZAjYBfQHMAjYBfQHMAjYBfQHMAjYBfQHMAjcBOgFcAxQB
        GwI2AX0BzAI2AX0BzAI2AX0BzAI2AX0BzAI2ATkBWhAAAxMBGQE2AX0BjgHMATYBfQGOAcwBNgF9AY4B
        zAE2AX0BjgHMATcCOgFcAxQBGwE2AX0BjgHMATYBfQGOAcwBNgF9AY4BzAE2AX0BjgHMATYBOQE6AVoI
        AAE1ATYBNQFWAS8BcQEvAdgBLAFxASwB2wE2AWsBNgHMATYBawE2AcwBOgFpAToBxgEWAXkBFgHvAQAB
        gAEAAf8BAAGAAQAB/wEXAXkBFwHuAT4BZwE+Ab8BNgFrATYBzAE2AWsBNgHMATcBbQE3Ac4BLAFvASwB
        2QE2ATgBNgFaUAADEAEVAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxgBICAAAxABFQMZASIDGQEiAxkB
        IgMZASIDGQEiAxkBIgMYASAoAAFFAVQBRQGUAQABgAEAAf8BAAGAAQAB/wFFAVIBRQGSaAACNwE6AV0C
        AAGqAf8CAAGqAf8CAAGqAf8CAAGqAf8CAAGqAf8CAAGqAf8CQwFmAa0gAAE3AToBOwFdAQABqgHUAf8B
        AAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wEAAaoB1AH/AUMBZgFxAa0oAAEwATEBMAFLAQAB
        gAEAAf8BAAGAAQAB/wEvATABLwFJaAADBAEFAjoBeAHGAgABqgH/AgABqgH/AgABqgH/AgABqgH/AhMB
        ngHyAh4BHwErIAADBAEFAToBeAGHAcYBAAGqAdQB/wEAAaoB1AH/AQABqgHUAf8BAAGqAdQB/wETAZ4B
        wAHyAR4CHwErKAADBwEJAQ8BewEPAfUBDgF9AQ4B9wMIAQpsAAMQARUCQwFqAbECAAGqAf8CAAGqAf8C
        LAGJAdsDKQE9KAADEAEVAUMBagFzAbEBAAGqAdQB/wEAAaoB1AH/ASwBiQGfAdsDKQE9MAABQQFhAUEB
        tgFBAWMBQQG3eAADDwETAhkBGgEjBAE0AAMPARMBGQIaASMEATQAAT0BQQE9AW0BPQFCAT0BbvgAAxgB
        IQMbASZcAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB+AEPAfgBDwLnAgAB
        8AEHAfABBwHjAccCAAHgAQcB4AEHAeEBhwIAAeABAwHgAQMB8AEPAgABwAEDAcABAwHwAQ8CAAHAAQMB
        wAEDAfABDwIAAcABAwHAAQMB8AEPAgABwAEDAcABAwHAAQMCAAHAAQMBwAEDAYABAQIAAcABAwHAAQME
        AAHwAQ8B8AEPAfwBPwIAAfABDwHwAQ8B/AE/AgAB8AEPAfABDwH8AT8CAAH4AR8B+AEfAf4BfwIAAf4B
        PwH+AT8B/gF/AgAE/wH+AX8CAAs=
</value>
  </data>
</root>